<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Prodigy.WaveformControls</name>
    </assembly>
    <members>
        <member name="T:Prodigy.WaveformControls.Extensions.BitmapContext">
            <summary>
            A disposable cross-platform wrapper around a WriteableBitmap, allowing a common API for Silverlight + WPF with locking + unlocking if necessary
            </summary>
            <remarks>Attempting to put as many preprocessor hacks in this file, to keep the rest of the codebase relatively clean</remarks>
        </member>
        <member name="P:Prodigy.WaveformControls.Extensions.BitmapContext.WriteableBitmap">
            <summary>
            The Bitmap
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Extensions.BitmapContext.Width">
            <summary>
            Width of the bitmap
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Extensions.BitmapContext.Height">
            <summary>
            Height of the bitmap
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.#ctor(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Creates an instance of a BitmapContext, with default mode = ReadWrite
            </summary>
            <param name="writeableBitmap"></param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.#ctor(System.Windows.Media.Imaging.WriteableBitmap,Prodigy.WaveformControls.Extensions.ReadWriteMode)">
            <summary>
            Creates an instance of a BitmapContext, with specified ReadWriteMode
            </summary>
            <param name="writeableBitmap"></param>
            <param name="mode"></param>
        </member>
        <member name="P:Prodigy.WaveformControls.Extensions.BitmapContext.Pixels">
            <summary>
            The pixels as ARGB integer values, where each channel is 8 bit.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Extensions.BitmapContext.Length">
            <summary>
            The number of pixels.
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.BlockCopy(Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int32)">
            <summary>
            Performs a Copy operation from source Bto destination BitmapContext
            </summary>
            <remarks>Equivalent to calling Buffer.BlockCopy in Silverlight, or native memcpy in WPF</remarks>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.BlockCopy(System.Int32[],System.Int32,Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int32)">
            <summary>
            Performs a Copy operation from source Array to destination BitmapContext
            </summary>
            <remarks>Equivalent to calling Buffer.BlockCopy in Silverlight, or native memcpy in WPF</remarks>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.BlockCopy(System.Byte[],System.Int32,Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int32)">
            <summary>
            Performs a Copy operation from source Array to destination BitmapContext
            </summary>
            <remarks>Equivalent to calling Buffer.BlockCopy in Silverlight, or native memcpy in WPF</remarks>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.BlockCopy(Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Performs a Copy operation from source BitmapContext to destination Array
            </summary>
            <remarks>Equivalent to calling Buffer.BlockCopy in Silverlight, or native memcpy in WPF</remarks>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.BlockCopy(Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int32[],System.Int32,System.Int32)">
            <summary>
            Performs a Copy operation from source BitmapContext to destination Array
            </summary>
            <remarks>Equivalent to calling Buffer.BlockCopy in Silverlight, or native memcpy in WPF</remarks>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.Clear">
            <summary>
            Clears the BitmapContext, filling the underlying bitmap with zeros
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapContext.Dispose">
            <summary>
            Disposes the BitmapContext, unlocking it and invalidating if WPF
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.Extensions.BitmapFactory">
            <summary>
            Cross-platform factory for WriteableBitmaps
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapFactory.New(System.Int32,System.Int32)">
            <summary>
            Creates a new WriteableBitmap of the specified width and height
            </summary>
            <remarks>For WPF the default DPI is 96x96 and PixelFormat is Pbgra32</remarks>
            <param name="pixelWidth"></param>
            <param name="pixelHeight"></param>
            <returns></returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.BitmapFactory.ConvertToPbgra32Format(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Converts the input BitmapSource to the Pbgra32 format WriteableBitmap which is internally used by the WriteableBitmapEx.
            </summary>
            <param name="source">The source bitmap.</param>
            <returns></returns>
        </member>
        <member name="T:Prodigy.WaveformControls.Extensions.ReadWriteMode">
            <summary>
            Read Write Mode for the BitmapContext.
            </summary>
        </member>
        <member name="F:Prodigy.WaveformControls.Extensions.ReadWriteMode.ReadOnly">
            <summary>
            On Dispose of a BitmapContext, do not Invalidate
            </summary>
        </member>
        <member name="F:Prodigy.WaveformControls.Extensions.ReadWriteMode.ReadWrite">
            <summary>
            On Dispose of a BitmapContext, invalidate the bitmap
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.Extensions.WriteableBitmapContextExtensions">
            <summary>
            Provides the WriteableBitmap context pixel data
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapContextExtensions.GetBitmapContext(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Gets a BitmapContext within which to perform nested IO operations on the bitmap
            </summary>
            <remarks>For WPF the BitmapContext will lock the bitmap. Call Dispose on the context to unlock</remarks>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapContextExtensions.GetBitmapContext(System.Windows.Media.Imaging.WriteableBitmap,Prodigy.WaveformControls.Extensions.ReadWriteMode)">
            <summary>
            Gets a BitmapContext within which to perform nested IO operations on the bitmap
            </summary>
            <remarks>For WPF the BitmapContext will lock the bitmap. Call Dispose on the context to unlock</remarks>
            <param name="bmp">The bitmap.</param>
            <param name="mode">The ReadWriteMode. If set to ReadOnly, the bitmap will not be invalidated on dispose of the context, else it will</param>
            <returns></returns>
        </member>
        <member name="T:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions">
            <summary>
            Collection of extension methods for the WriteableBitmap class.
            </summary>
            <summary>
            Collection of extension methods for the WriteableBitmap class.
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLine(Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA. 
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLineAa(Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.AlphaBlendNormalOnPremultiplied(Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int32,System.UInt32,System.UInt32)">
            <summary> 
            Blends a specific source color on top of a destination premultiplied color 
            </summary> 
            <param name="context">Array containing destination color</param> 
            <param name="index">Index of destination pixel</param> 
            <param name="sa">Source alpha (0..255)</param> 
            <param name="srb">Source non-premultiplied red and blue component in the format 0x00rr00bb</param> 
            <param name="sg">Source green component (0..255)</param> 
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawLongLine(Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA. 
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawText(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.FormattedText,System.Windows.Point)">
            <summary>
            Draws the text.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="renderText">The formated text.</param>
            <param name="origin">The origin in the bitmap.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawElement(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.FrameworkElement,System.Windows.Point)">
            <summary>
            Draws the Element.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="element">The element.</param>
            <param name="origin">The origin in the bitmap.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FillTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="T:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Interpolation">
            <summary>
            The interpolation method.
            </summary>
        </member>
        <member name="F:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Interpolation.NearestNeighbor">
            <summary>
            The nearest neighbor algorithm simply selects the color of the nearest pixel.
            </summary>
        </member>
        <member name="F:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Interpolation.Bilinear">
            <summary>
            Linear interpolation in 2D using the average of 3 neighboring pixels.
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FlipMode">
            <summary>
            The mode for flipping.
            </summary>
        </member>
        <member name="F:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FlipMode.Vertical">
            <summary>
            Flips the image vertical (around the center of the y-axis).
            </summary>
        </member>
        <member name="F:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FlipMode.Horizontal">
            <summary>
            Flips the image horizontal (around the center of the x-axis).
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Clear(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color)">
            <summary>
            Fills the whole WriteableBitmap with a color.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="color">The color used for filling.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Clear(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Fills the whole WriteableBitmap with an empty color (0).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.ForEach(System.Windows.Media.Imaging.WriteableBitmap,System.Func{System.Int32,System.Int32,System.Windows.Media.Color})">
            <summary>
            Applies the given function to all the pixels of the bitmap in 
            order to set their color.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="func">The function to apply. With parameters x, y and a color as a result</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.ForEach(System.Windows.Media.Imaging.WriteableBitmap,System.Func{System.Int32,System.Int32,System.Windows.Media.Color,System.Windows.Media.Color})">
            <summary>
            Applies the given function to all the pixels of the bitmap in 
            order to set their color.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="func">The function to apply. With parameters x, y, source color and a color as a result</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.GetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Gets the color of the pixel at the x, y coordinate as integer.  
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate of the pixel.</param>
            <param name="y">The y coordinate of the pixel.</param>
            <returns>The color of the pixel at x, y.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.GetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Gets the color of the pixel at the x, y coordinate as a Color struct.  
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate of the pixel.</param>
            <param name="y">The y coordinate of the pixel.</param>
            <returns>The color of the pixel at x, y as a Color struct.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.GetBrightness(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Gets the brightness / luminance of the pixel at the x, y coordinate as byte.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate of the pixel.</param>
            <param name="y">The y coordinate of the pixel.</param>
            <returns>The brightness of the pixel at x, y.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color of the pixel using a precalculated index (faster). 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color of the pixel. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color of the pixel including the alpha value and using a precalculated index (faster). 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="a">The alpha value of the color.</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color of the pixel including the alpha value. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="a">The alpha value of the color.</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Windows.Media.Color)">
            <summary>
            Sets the color of the pixel using a precalculated index (faster). 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Sets the color of the pixel. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Byte,System.Windows.Media.Color)">
            <summary>
            Sets the color of the pixel using an extra alpha value and a precalculated index (faster). 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="a">The alpha value of the color.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Byte,System.Windows.Media.Color)">
            <summary>
            Sets the color of the pixel using an extra alpha value. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="a">The alpha value of the color.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Sets the color of the pixel using a precalculated index (faster).  
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the color of the pixel. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Crop(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new cropped WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate of the rectangle that defines the crop region.</param>
            <param name="y">The y coordinate of the rectangle that defines the crop region.</param>
            <param name="width">The width of the rectangle that defines the crop region.</param>
            <param name="height">The height of the rectangle that defines the crop region.</param>
            <returns>A new WriteableBitmap that is a cropped version of the input.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Crop(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect)">
            <summary>
            Creates a new cropped WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="region">The rectangle that defines the crop region.</param>
            <returns>A new WriteableBitmap that is a cropped version of the input.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Resize(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Interpolation)">
            <summary>
            Creates a new resized WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="width">The new desired width.</param>
            <param name="height">The new desired height.</param>
            <param name="interpolation">The interpolation method that should be used.</param>
            <returns>A new WriteableBitmap that is a resized version of the input.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Resize(Prodigy.WaveformControls.Extensions.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Interpolation)">
            <summary>
            Creates a new resized bitmap.
            </summary>
            <param name="srcContext">The source context.</param>
            <param name="widthSource">The width of the source pixels.</param>
            <param name="heightSource">The height of the source pixels.</param>
            <param name="width">The new desired width.</param>
            <param name="height">The new desired height.</param>
            <param name="interpolation">The interpolation method that should be used.</param>
            <returns>A new bitmap that is a resized version of the input.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Resize(System.Int32*,System.Int32,System.Int32,System.Int32,System.Int32,Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Interpolation)">
            <summary>
            Creates a new resized bitmap.
            </summary>
            <param name="pixels">The source pixels.</param>
            <param name="widthSource">The width of the source pixels.</param>
            <param name="heightSource">The height of the source pixels.</param>
            <param name="width">The new desired width.</param>
            <param name="height">The new desired height.</param>
            <param name="interpolation">The interpolation method that should be used.</param>
            <returns>A new bitmap that is a resized version of the input.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Rotate(System.Windows.Media.Imaging.WriteableBitmap,System.Int32)">
            <summary>
            Rotates the bitmap in 90� steps clockwise and returns a new rotated WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="angle">The angle in degress the bitmap should be rotated in 90� steps clockwise.</param>
            <returns>A new WriteableBitmap that is a rotated version of the input.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.RotateFree(System.Windows.Media.Imaging.WriteableBitmap,System.Double,System.Boolean)">
            <summary>
            Rotates the bitmap in any degree returns a new rotated WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="angle">Arbitrary angle in 360 Degrees (positive = clockwise).</param>
            <param name="crop">if true: keep the size, false: adjust canvas to new size</param>
            <returns>A new WriteableBitmap that is a rotated version of the input.</returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.Flip(System.Windows.Media.Imaging.WriteableBitmap,Prodigy.WaveformControls.Extensions.WriteableBitmapExtensions.FlipMode)">
            <summary>
            Flips (reflects the image) eiter vertical or horizontal.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="flipMode">The flip mode.</param>
            <returns>A new WriteableBitmap that is a flipped version of the input.</returns>
        </member>
        <member name="T:Prodigy.WaveformControls.Navigation.MouseNavigation">
            <summary>Provides common methods of mouse navigation around viewport</summary>
        </member>
        <member name="M:Prodigy.WaveformControls.Navigation.MouseNavigation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Prodigy.WaveformControls.Navigation.MouseNavigation"/> class.
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.Navigation.RectangleSelectionAdorner">
            <summary>Helper class to draw semitransparent rectangle over the
            selection area</summary>
        </member>
        <member name="T:Prodigy.WaveformControls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.Graph">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.Graph1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.UnZoomIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.ZoomCursor">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.ZoomIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Properties.Resources.ZoomOutCursor">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.RemovePlotEventArgs.#ctor(Prodigy.WaveformControls.Interfaces.IPlotInfoView)">
            <summary>
            Initializes a new instance of the <see cref="T:Prodigy.WaveformControls.RemovePlotEventArgs" /> class.
            </summary>
            <param name="plot">The plot.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.Viewport.DataTransform.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Prodigy.WaveformControls.Viewport.DataTransform" /> class.
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.Viewport.Viewport2D">
            <summary>
            TODO: The view port should contain the data offset and scale.
            Data area - has offset and scale that can be changed from the data
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.Viewport.Viewport2D.Visible">
            <summary>
            Gets or sets the Actual Data.
            </summary>
            <value>The visible.</value>
        </member>
        <member name="P:Prodigy.WaveformControls.Viewport.Viewport2D.Output">
            <summary>
            Gets or sets the output Screen Coordinates.
            </summary>
            <value>The output.</value>
        </member>
        <member name="M:Prodigy.WaveformControls.Viewport.Viewport2D.DataToScreen(System.Windows.Point)">
            <summary>
            Data to screen point.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="P:Prodigy.WaveformControls.Viewport.ViewportRestrictions.Restriction">
            <summary>
            Gets or sets the viewport visible restriction.
            </summary>
            <value>The restriction.</value>
        </member>
        <member name="M:Prodigy.WaveformControls.Viewport.ViewportRestrictions.Apply(Prodigy.WaveformControls.Viewport.ViewportArea)">
            <summary>
            Applies the specified visible.
            </summary>
            <param name="visible">The visible.</param>
            <returns></returns>
        </member>
        <member name="M:Prodigy.WaveformControls.Viewport.ViewportRestrictions.Apply(Prodigy.WaveformControls.Viewport.ViewportArea,Prodigy.WaveformControls.Viewport.Viewport2D)">
            <summary>
            Applies the specified output.
            </summary>
            <param name="rect">The rect.</param>
            <param name="viewport">The viewport.</param>
            <returns></returns>
        </member>
        <member name="T:Prodigy.WaveformControls.View.Paner">
            <summary>
            Interaction logic for Paner.xaml
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.Paner.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.View.BusView">
            <summary>
            This Class defines the Bus Structure
            </summary>
        </member>
        <member name="F:Prodigy.WaveformControls.View.BusView.data">
            <summary>
            Issue - By the time dependency property is updated we try to update the bus bitmap. This causes issue with bus generation.
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.View.CursorInfoView">
            <summary>
            Interaction logic for CursorInfoView.xaml
            </summary>
            <summary>
            CursorInfoView
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.CursorInfoView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.View.CursorView">
            <summary>
            Interaction logic for CursorView.xaml
            </summary>
            <summary>
            CursorView
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.CursorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.View.Marker">
            <summary>
            Interaction logic for Marker.xaml
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.Marker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.View.PlotterView">
            <summary>
            Interaction logic for PlotterView.xaml
            </summary>
            <summary>
            PlotterView
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.PlotterView.UpdateViewport(Prodigy.WaveformControls.View.PlotEvents,System.Windows.Point,System.Windows.Point)">
            <summary>
            Updates the viewport.
            This Updation only causes the X 
            calculate the viewport restrictions
            apply viewport restrictions
            horizontal restriction 0 to recordlength
            </summary>
            <param name="plotEvent">The plot event.</param>
            <param name="visibleStart">The visible start.</param>
            <param name="visibleEnd">The visible end.</param>
        </member>
        <member name="M:Prodigy.WaveformControls.View.PlotterView.Refresh">
            <summary>
            Refreshes the UI.
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.View.PlotterView.AutoScaleAndOffset">
            <summary>
            Plots offset and scale are automatically calculated based on number of waveforms. Default value is false.
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.PlotterView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.View.PlotView">
            <summary>
            Basic Graph
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.PlotView.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Prodigy.WaveformControls.View.PlotView" /> class.
            </summary>
            <param name="plotter">The plotter.</param>
        </member>
        <member name="P:Prodigy.WaveformControls.View.PlotView.Scale">
            <summary>
            Scale of the Parent graph
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.View.PlotView.Offset">
            <summary>
            Offset of the parent graph
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.View.PlotView.DataScale">
            <summary>
            Scale the original data
            </summary>
        </member>
        <member name="P:Prodigy.WaveformControls.View.PlotView.DataOffset">
            <summary>
            Offset the original data
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.PlotView.Refresh">
            <summary>
            Refreshes this instance.
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.PositionerGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Prodigy.WaveformControls.View.PositionerGrid" /> class.
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.View.PositionerView">
            <summary>
            Interaction logic for PositionerView.xaml
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.PositionerView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.View.TimeAxisInfoView">
            <summary>
            Interaction logic for TimeAxisInfoView.xaml
            </summary>
            <summary>
            TimeAxisInfoView
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.View.TimeAxisInfoView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Prodigy.WaveformControls.WfmPlotCtrl">
            <summary>
            WfmPlotCtrl
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.WfmPlotCtrl.#ctor">
            <summary>
            Initializes a new instance
            </summary>
        </member>
        <member name="M:Prodigy.WaveformControls.WfmPlotCtrl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
