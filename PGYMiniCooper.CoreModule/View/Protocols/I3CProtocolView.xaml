<UserControl x:Class="PGYMiniCooper.CoreModule.View.Protocols.I3CProtocolView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PGYMiniCooper.CoreModule.View.Protocols"
             mc:Ignorable="d"  x:Name="parent"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"    
             xmlns:behavior="clr-namespace:ProdigyFramework.Behavior;assembly=ProdigyFramework"
             xmlns:conv="clr-namespace:PGYMiniCooper.CoreModule.View.Converters"
             xmlns:vm="clr-namespace:PGYMiniCooper.CoreModule.ViewModel.ProtocolViewModel"
             xmlns:customview="clr-namespace:PGYMiniCooper.CoreModule.View.CustomView"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance vm:ResultViewModel_I3C}">
    <UserControl.Resources>
        <conv:WidthAlignConverter x:Key="widthAlignConverter"/>
        <DataTemplate x:Key="i3cdatatemplate" DataType="{x:Type vm:ResultViewModel_I3C}">
            <Border BorderThickness="0" Background="#FFF2FAFF" Padding="10"  >
                <ScrollViewer VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                    <DataGrid Grid.Row="1" Grid.Column="0" RowHeaderWidth="20"  HorizontalGridLinesBrush="Transparent" VerticalGridLinesBrush="Transparent"
                                                  AutoGenerateColumns="False" Width="{Binding ActualWidth,ElementName=i3cgrid,Converter={StaticResource widthAlignConverter}}" Height="200"
                                                  ItemsSource="{Binding Frame.PacketCollection}" 
                                                   CanUserSortColumns="False" SelectionMode="Single" HeadersVisibility="Column"
                                                   CanUserAddRows="False"  HorizontalAlignment="Left" SelectedItem="{Binding DataContext.WareHouse.SelectedItem,ElementName=parent,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                   IsReadOnly="True" VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto">
                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.FrameSelectionCommand,ElementName=i3cgrid, Mode=OneWay}" CommandParameter="i3c"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Time" MinWidth="60" Width="3*">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource timestampConverter}">
                                        <Binding Path="TimeStamp" />
                                        <Binding Path="DataContext.WareHouse.TriggerTime" ElementName="parent"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Packet Type" MinWidth="40" Width="2*" Binding="{Binding PacketType}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Value" Width="3*" MinWidth="60" Binding="{Binding Value, Converter={StaticResource decimalToHexConverter}}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Host" Width="2*" MinWidth="60" Binding="{Binding HostDevice}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Frequency" Width="2*" MinWidth="60" Binding="{Binding Frequency, Converter={StaticResource frequencyConverter}}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Protocol" Width="2*" MinWidth="60" Binding="{Binding ProtocolMode}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Error" Width="2*" MinWidth="60" Binding="{Binding ErrorType}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </ScrollViewer>
            </Border>
        </DataTemplate>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Background" Value="#03a9f4" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="#FFEDF9FD" />
            <Setter Property="FontWeight" Value="Normal"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Orange"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#3F66EC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                    <Setter Property="Background" Value="Yellow"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>

            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <customview:SearchFilter_I3C Grid.Row="0" />
        <DataGrid Grid.Row="1"
                ItemsSource="{Binding ASyncCollection,UpdateSourceTrigger=PropertyChanged}"
                   IsEnabled="{Binding ASyncCollection.ThreadsAvaliable}"
                  IsSynchronizedWithCurrentItem="True"
                  SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"     
                  SelectedValue="{Binding SelectedFrame,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                 SelectedValuePath="Frame"
                  SelectionMode="Single"
                  CanUserSortColumns="False" HorizontalAlignment="Stretch"
                  CanUserDeleteRows="False"
                  RowDetailsVisibilityMode="Collapsed"
                  CanUserAddRows="False" HorizontalGridLinesBrush="#E9E3E3" VerticalGridLinesBrush="#E9E3E3"
                  
                  IsReadOnly="True"
                  x:Name="i3cgrid"
                  AutoGenerateColumns="False" 
                  RowHeaderWidth="25"
                  HeadersVisibility="All"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.ScrollUnit="Item"
                  VirtualizingPanel.CacheLengthUnit="Item"
                  VirtualizingPanel.CacheLength="10,10" 
                  ScrollViewer.IsDeferredScrollingEnabled="True"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            Width="Auto"
            behavior:DataGridBehavior.AutoScrollIntoView="True">
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionCommand, Mode=OneWay}" CommandParameter="i3c"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#2A74D1"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource objectComparerConverter}">
                                            <Binding Path="DataContext.WareHouse.TriggerPacket" RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}"/>
                                            <Binding Path="FrameIndex"/>
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Content" Value="T"/>
                            <Setter Property="Foreground" Value="#256B0E"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="DataGridRow">
                    <Setter Property="ToolTip" Value="{Binding Index}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoading}" Value="True">
                            <Setter Property="DataGridRow.Cursor" Value="Wait"/>
                            <Setter Property="DataGridRow.Background" Value="LightGray"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBlock Text="Loading ..." 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                    </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Index" Binding="{Binding Frame.FrameIndex}" />
                <DataGridTextColumn Header="Time" MinWidth="60" Width="3*">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource timestampConverter}">
                            <Binding Path="Frame.StartTime" />
                            <Binding Path="DataContext.WareHouse.TriggerTime" RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}" />
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding StartTime}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Message" MinWidth="100" Width="3*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <!--<Expander Template="{StaticResource StretchyExpanderTemp}" HorizontalAlignment="Left" x:Name="myexpander"  Expanded="Expander_Expanded" Collapsed="Expander_Collapsed">
                            <Expander.Header>-->
                                <ToggleButton x:Name="viewdata"  Margin="2,0,0,0" BorderThickness="0" Click="btnDetailFlotingWindow_Click">
                                    <Image Source="/PGYMiniCooper.CoreModule;component/Resources/Icons/open.png" Width="14" Height="14" ></Image>
                                </ToggleButton>
                                <TextBlock x:Name="header" Text="{Binding Frame.FrameType}" HorizontalAlignment="Left">
                                </TextBlock>

                                <!--</Expander.Header>
                        </Expander>-->
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTextColumn Header="Frequency" MinWidth="70" Width="3*" Binding="{Binding Frequency, Converter={StaticResource frequencyConverter}}"/>-->
                <DataGridTextColumn Header="Error" Width="2*"  Binding="{Binding Frame.ErrorType}"/>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu Name="MarkerPlacement" StaysOpen="True" >
                    <MenuItem Header="Goto Trigger position" Command="{Binding GotoTrigger}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </Grid>
</UserControl>
